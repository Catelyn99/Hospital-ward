{"version":3,"sources":["InsideRoom/Beds.module.scss","App.module.scss","InsideRoom/PatientsInRoom.module.scss","RoomsInWard/Room.jsx","Contexts/BedsContext.jsx","AboutPatient/Patient.jsx","InsideRoom/PatientsInRoom.jsx","InsideRoom/Beds.jsx","RoomsInWard/Rooms.jsx","Header/Title.jsx","App.jsx","reportWebVitals.js","index.jsx","AboutPatient/Patient.module.scss","RoomsInWard/Room.module.scss"],"names":["module","exports","Room","props","className","style","room","roomType","roomIsolation","roomIntensive","roomPrimary","getStyle","join","roomNumber","amountPatient","checkAmountOfPatients","BedsContext","React","createContext","showPatientInfo","id","saveInfo","info","cleanInfo","cleaner","deleteBed","addBed","active","Patient","bedsContext","useContext","useState","patient","formState","setFormState","handleInputChange","event","name","target","value","styled","form","onSubmit","preventDefault","mainHeader","buttons","submit","type","headerBed","onClick","age","diagnosis","comments","tasks","remove","inputs","required","onChange","min","cols","rows","wrap","PatientsInRoom","patientBed","fillBed","emptyBed","empty","e","stopPropagation","createPatientIcon","fontSize","Beds","patientsHTML","patients","map","styles","containerItem","showPatient","container","size","Rooms","beds","a","amount","push","setBeds","activeBed","bedsState","setBedsState","Provider","selectedPerson","find","element","bed","Object","entries","forEach","key","filter","length","openedRoom","showRoom","Title","window","location","reload","h1","App","rooms","roomsState","setRoomsState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f80a6f41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Beds_container__3ZVk-\",\"containerItem\":\"Beds_containerItem__rGek8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__kjRhy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"patientBed\":\"PatientsInRoom_patientBed__RbfWc\",\"emptyBed\":\"PatientsInRoom_emptyBed__1EIep\",\"fillBed\":\"PatientsInRoom_fillBed__2chen\",\"active\":\"PatientsInRoom_active__3tgQM\",\"addBed\":\"PatientsInRoom_addBed__ZXq7e\",\"headerBed\":\"PatientsInRoom_headerBed__2Uh2m\",\"empty\":\"PatientsInRoom_empty__1paIa\",\"createPatientIcon\":\"PatientsInRoom_createPatientIcon__3A_ZA\",\"inputAge\":\"PatientsInRoom_inputAge__Xmtzm\"};","import React from 'react';\r\nimport style from './Room.module.scss';\r\n\r\n\r\nconst Room = props => {\r\n\r\nconst getStyle = () => {\r\n    switch (props.roomType) {\r\n        case 'isolation':\r\n            return style.roomIsolation;\r\n        case 'intensive':\r\n            return style.roomIntensive;\r\n        default:\r\n            return style.roomPrimary;\r\n    }\r\n}\r\n\r\n        return (\r\n        <div className={[style.room, getStyle()].join(' ')}>\r\n            {\r\n                props.roomType === 'normal' ? \r\n                <p>SALA </p>: null\r\n            }\r\n            <p>{props.roomNumber}</p>\r\n            <p className={style.amountPatient}>Stan pacjent√≥w: {props.checkAmountOfPatients}</p>\r\n            </div>\r\n        )}\r\n\r\n\r\nexport default Room;","import React from 'react';\r\n\r\nconst BedsContext = React.createContext({\r\n    showPatientInfo: (id) => { },\r\n    saveInfo: (info) => { },\r\n    cleanInfo: (cleaner) => { },\r\n    deleteBed: (id) => { },\r\n    addBed: () => { },\r\n    active: null\r\n});\r\n\r\nexport default BedsContext;\r\n","import React, { useState, useContext } from 'react';\r\nimport BedsContext from '../Contexts/BedsContext';\r\nimport styled from './Patient.module.scss';\r\n\r\nconst Patient = (props) => {\r\n    const bedsContext = useContext(BedsContext);\r\n\r\n    const [formState, setFormState] = useState({\r\n        ...props.patient\r\n    });\r\n\r\n    const handleInputChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const saveForm = (event) => {\r\n        event.preventDefault();\r\n        bedsContext.saveInfo(formState);\r\n    }\r\n\r\n    const cleanPatient = () => {\r\n        bedsContext.cleanInfo(formState);\r\n        setFormState({\r\n            ...formState,\r\n            name: '',\r\n            age: '',\r\n            diagnosis: '',\r\n            comments: '',\r\n            tasks: ''\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form className={styled.form} onSubmit={saveForm}>\r\n            {props.patient.name === \"\" ?\r\n                <>\r\n                    <input className={`${styled.mainHeader} ${styled.buttons} ${styled.submit}`} type=\"submit\" value=\"ZAPISZ\" />\r\n                    <div className={styled.headerBed}>Dodaj pacjenta</div>\r\n                </> :\r\n                <> <div className={styled.mainHeader}>\r\n                    <input className={`${styled.buttons} ${styled.submit}`} type=\"submit\" value=\"ZAPISZ\" />\r\n                    <button onClick={cleanPatient} className={`${styled.buttons} ${styled.remove}`}>USU≈É</button>\r\n                </div>\r\n                    <div className={styled.headerBed}>Edytuj</div>\r\n                </>}\r\n            <label>\r\n                Imiƒô i nazwisko:\r\n        <input className={styled.inputs} required name=\"name\" type=\"text\" value={formState.name} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n                Wiek:\r\n         <input className={styled.inputs} name=\"age\" type=\"number\" min=\"0\" value={formState.age} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n                Diagnoza lekarska:\r\n        <textarea name=\"diagnosis\" cols=\"75\" rows=\"4\" wrap=\"hard\" value={formState.diagnosis} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n                Uwagi:\r\n             <textarea name=\"comments\" cols=\"75\" rows=\"3\" value={formState.comments} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n                Zlecenia:\r\n             <textarea name=\"tasks\" cols=\"75\" rows=\"10\" value={formState.tasks} onChange={handleInputChange} />\r\n            </label>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Patient;\r\n","import { useContext } from 'react';\r\nimport BedsContext from '../Contexts/BedsContext';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport styled from './PatientsInRoom.module.scss';\r\nimport Popup from '../Popup/Popup';\r\n\r\nconst PatientsInRoom = (props) => {\r\n    const bedsContext = useContext(BedsContext);\r\n\r\n    return (\r\n        <div\r\n            className={`${styled.patientBed} ${props.name !== \"\" ? styled.fillBed : styled.emptyBed} ${bedsContext.active === props.id ? styled.active : null}`}\r\n            onClick={() => bedsContext.showPatientInfo(props.id)}>\r\n            <div className={`${styled.headerBed} ${props.name !== \"\" ? styled.active : styled.empty}`}>\r\n                <p>≈Å√ì≈ªKO {props.id}</p>\r\n                <DeleteForeverIcon onClick={(e) => {\r\n                    <Popup />\r\n                    e.stopPropagation();\r\n                    bedsContext.deleteBed(props.id);\r\n                }} />\r\n            </div>\r\n            {\r\n                props.name !== \"\" ?\r\n                    <> <p className={styled.fillBed}>Pacjent: {props.name}</p>\r\n                        <p className={styled.fillBed}>Wiek: {props.age}</p> </> :\r\n                    <div className={styled.createPatientIcon}><PersonAddIcon fontSize=\"inherit\"/></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default PatientsInRoom;","import Patient from '../AboutPatient/Patient';\r\nimport PatientsInRoom from './PatientsInRoom';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport styled from './PatientsInRoom.module.scss';\r\nimport React, { useContext } from 'react';\r\nimport BedsContext from '../Contexts/BedsContext';\r\nimport styles from './Beds.module.scss'\r\n\r\nconst Beds = (props) => {\r\nconst bedsContext = useContext(BedsContext);\r\n\r\n  const patientsHTML = props.patients.map(patient =>\r\n    <div className={styles.containerItem} key={patient.id}>\r\n      <PatientsInRoom \r\n        name={patient.name}\r\n        age={patient.age}\r\n        id={patient.id}\r\n   />\r\n      {\r\n        props.showPatient !== null &&\r\n          props.showPatient.id === patient.id ?\r\n          <Patient patient={patient} /> : null\r\n      }\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className={styles.container} >\r\n      {patientsHTML}\r\n      {\r\n        props.showPatient === null ? \r\n        <div onClick={() => bedsContext.addBed()} className={`${styled.patientBed} ${styled.addBed} ${styles.containerItem}`}>\r\n        <span>DODAJ ≈Å√ì≈ªKO</span>\r\n        <LocalHospitalIcon size=\"medium\"/>\r\n        </div> : null\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Beds;","import Room from \"./Room\";\r\nimport Beds from \"../InsideRoom/Beds\";\r\nimport BedsContext from \"../Contexts/BedsContext\"\r\nimport { useState } from \"react\";\r\n\r\nconst Rooms = (props) => {\r\n\r\n  const setBeds = () => {\r\n    const beds = [];\r\n    for (let a=1; a<=props.room.amount; a++){\r\n      beds.push({ name: \"\", age: \"\", diagnosis: \"\", comments: \"\", tasks: \"\", id: a });\r\n    }\r\n    return beds;\r\n  }\r\n\r\n  const [bedsState, setBedsState] = useState({\r\n    beds: setBeds(),\r\n    showPatient: null,\r\n    activeBed: null\r\n  });\r\n\r\nconst addBed = () => {\r\n  setBedsState({\r\n    ...bedsState,\r\n    beds: [\r\n      ...bedsState.beds,\r\n      { name: \"\", age: \"\", diagnosis: \"\", comments: \"\", tasks: \"\", id: (bedsState.beds.length + 1)}\r\n    ]\r\n  });\r\n}\r\n\r\n  const deleteBed = (id) => {\r\n    setBedsState({\r\n      ...bedsState,\r\n      beds: bedsState.beds.filter(bed => bed.id !== id)\r\n    });\r\n  }\r\n\r\n  const showPatientInfo = (id) => {\r\n    const selectedPerson = bedsState.beds.find(element => element.id === id);\r\n    if (bedsState.showPatient !== selectedPerson) {\r\n      setBedsState({\r\n        showPatient: selectedPerson,\r\n        beds: bedsState.beds,\r\n        activeBed: id\r\n      });\r\n    } else {\r\n      setBedsState({\r\n        showPatient: null,\r\n        beds: bedsState.beds,\r\n        activeBed: null\r\n      });\r\n    }\r\n  }\r\n\r\n  const saveInfo = (info) => {\r\n    const beds = bedsState.beds.map(bed => {\r\n      if (bed.id === info.id) {\r\n        return info;\r\n      }\r\n      return bed;\r\n    });\r\n\r\n    setBedsState({\r\n      ...bedsState,\r\n      beds: beds\r\n    });\r\n  }\r\n\r\nconst cleanInfo = (info) => {\r\n  const beds = bedsState.beds.map(bed => {\r\n    if (bed.id === info.id) {\r\n      Object.entries(info).forEach(([key, value]) => {\r\n        info[key] = key !== 'id' ? \"\" : value;\r\n      });\r\n   return info;\r\n  } \r\n  return bed;\r\n});\r\n\r\n  setBedsState({\r\n    ...bedsState,\r\n    beds: beds\r\n});\r\n}\r\n\r\n  const checkAmountOfPatients = () => bedsState.beds.filter(patient => patient.name !== \"\").length;\r\n\r\n\r\n    return (\r\n        <BedsContext.Provider value={{\r\n          showPatientInfo: showPatientInfo,\r\n          saveInfo: saveInfo,\r\n          cleanInfo: cleanInfo,\r\n          deleteBed: deleteBed,\r\n          addBed: addBed,\r\n          active: bedsState.activeBed\r\n        }}>\r\n            {\r\n                props.openedRoom === null ?\r\n                    <div onClick={props.showRoom}>\r\n                        <Room roomNumber={props.room.id}\r\n                        roomType={props.room.type}\r\n                        checkAmountOfPatients={checkAmountOfPatients()} />\r\n                    </div> :\r\n                    props.openedRoom === props.room ?\r\n                        <Beds \r\n                        patients={bedsState.beds}\r\n                        showPatient={bedsState.showPatient}\r\n                        /> : null\r\n            }\r\n        </BedsContext.Provider>\r\n    );\r\n}\r\n\r\n\r\nexport default Rooms;","import styled from './Title.module.scss';\r\n\r\n\r\nconst Title = () => {\r\n\r\n    function refresh() {\r\n          return window.location.reload(true);\r\n    }\r\n\r\n    return (\r\n        <h1 onClick={refresh} className={styled.h1}>CHIRURGIA OG√ìLNA</h1>\r\n    )\r\n}\r\n\r\nexport default Title;","import React, { useState } from 'react';\r\nimport styled from './App.module.scss';\r\nimport Rooms from './RoomsInWard/Rooms';\r\nimport Title from './Header/Title';\r\n\r\nconst App = () => {\r\n\r\n  const [roomsState, setRoomsState] = useState({\r\n    rooms: [\r\n      {\r\n        id: 1,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 2,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 3,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 4,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 5,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 6,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 7,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 'IZOLATKA',\r\n        type: 'isolation',\r\n        amount: 1\r\n      }, {\r\n        id: 'SIOM',\r\n        type: 'intensive',\r\n        amount: 2\r\n      }],\r\n    openedRoom: null\r\n  });\r\n\r\n  const showRoom = (id) => {\r\n    setRoomsState({\r\n      openedRoom: roomsState.rooms.find(element => element.id === id),\r\n      rooms: roomsState.rooms\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <Title />\r\n      <div className={styled.container}>\r\n        {roomsState.rooms.map(element => {\r\n         return <Rooms key={element.id} showRoom={() => showRoom(element.id)}\r\n         openedRoom={roomsState.openedRoom}\r\n         room={element} />\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Patient_form__2jBF1\",\"inputs\":\"Patient_inputs__2J-Ov\",\"headerBed\":\"Patient_headerBed__2EWWD\",\"mainHeader\":\"Patient_mainHeader__m5UAR\",\"buttons\":\"Patient_buttons__22w_h\",\"remove\":\"Patient_remove__Ro1Wh\",\"submit\":\"Patient_submit__1VtbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"room\":\"Room_room__1JGhl\",\"roomPrimary\":\"Room_roomPrimary__1y5ZH\",\"roomIntensive\":\"Room_roomIntensive__1669F\",\"roomIsolation\":\"Room_roomIsolation__1pavi\",\"amountPatient\":\"Room_amountPatient__1QJB5\"};"],"sourceRoot":""}