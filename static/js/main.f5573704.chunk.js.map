{"version":3,"sources":["AboutPatient/Patient.module.scss","InsideRoom/PatientInRoom.module.scss","RoomInWard/RoomInWard.module.scss","App.module.scss","RoomInWard/RoomInWard.jsx","Contexts/PatientsContext.jsx","AboutPatient/Patient.jsx","InsideRoom/PatientInRoom.jsx","InsideRoom/Room.jsx","RoomInWard/RoomEntrance.jsx","Header/Title.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["module","exports","RoomInWard","props","className","style","room","roomType","roomIsolation","roomIntensive","roomPrimary","getStyle","join","roomNumber","amountPatient","checkAmountOfPatients","PatientsContext","React","createContext","showPatientInfo","id","saveInfo","info","cleanInfo","cleaner","active","Patient","patients","useContext","useState","patient","formState","setFormState","handleInputChange","event","name","target","value","styled","form","onSubmit","preventDefault","mainHeader","buttons","submit","type","headerBed","onClick","age","diagnosis","comments","tasks","remove","inputs","required","onChange","min","cols","rows","wrap","PatientInRoom","patientBed","fillBed","emptyBed","activeBed","Room","personsHTML","persons","map","person","showPersons","RoomEntrance","a","amount","push","setPersons","activePerson","personsState","setPersonsState","Provider","selectedPerson","find","element","Object","entries","forEach","key","openedRoom","showRoom","filter","length","Title","window","location","reload","h1","App","rooms","roomsState","setRoomsState","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5573704.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Patient_form__2jBF1\",\"inputs\":\"Patient_inputs__2J-Ov\",\"headerBed\":\"Patient_headerBed__2EWWD\",\"mainHeader\":\"Patient_mainHeader__m5UAR\",\"buttons\":\"Patient_buttons__22w_h\",\"remove\":\"Patient_remove__Ro1Wh\",\"submit\":\"Patient_submit__1VtbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"patientBed\":\"PatientInRoom_patientBed__3PfS7\",\"emptyBed\":\"PatientInRoom_emptyBed__1T2YP\",\"fillBed\":\"PatientInRoom_fillBed__GAZXx\",\"active\":\"PatientInRoom_active__2Q-Yk\",\"inputAge\":\"PatientInRoom_inputAge__dbzij\",\"bedWords\":\"PatientInRoom_bedWords__3CGlj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"room\":\"RoomInWard_room__3BRqr\",\"roomPrimary\":\"RoomInWard_roomPrimary__1l-5g\",\"roomIntensive\":\"RoomInWard_roomIntensive__1cCxK\",\"roomIsolation\":\"RoomInWard_roomIsolation__37Wu4\",\"amountPatient\":\"RoomInWard_amountPatient__2cxbP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__kjRhy\"};","import React from 'react';\r\nimport style from './RoomInWard.module.scss';\r\n\r\n\r\nconst RoomInWard = props => {\r\n\r\nconst getStyle = () => {\r\n    switch (props.roomType) {\r\n        case 'isolation':\r\n            return style.roomIsolation;\r\n        case 'intensive':\r\n            return style.roomIntensive;\r\n        default:\r\n            return style.roomPrimary;\r\n    }\r\n}\r\n\r\n        return (\r\n        <div className={[style.room, getStyle()].join(' ')}>\r\n            {\r\n                props.roomType === 'normal' ? \r\n                <p>SALA </p>: null\r\n            }\r\n            <p>{props.roomNumber}</p>\r\n            <p className={style.amountPatient}>Stan pacjent√≥w: {props.checkAmountOfPatients}</p>\r\n            </div>\r\n        )}\r\n\r\n\r\nexport default RoomInWard;","import React from 'react';\r\n\r\nconst PatientsContext = React.createContext({\r\n    showPatientInfo: (id) => { },\r\n    saveInfo: (info) => { },\r\n    cleanInfo: (cleaner) => { },\r\n    active: null\r\n});\r\n\r\nexport default PatientsContext;\r\n","import React, { useState, useContext } from 'react';\r\nimport PatientsContext from '../Contexts/PatientsContext';\r\nimport styled from './Patient.module.scss';\r\n\r\nconst Patient = (props) => {\r\n    const patients = useContext(PatientsContext);\r\n\r\n    const [formState, setFormState] = useState({\r\n        ...props.patient\r\n    });\r\n\r\n    const handleInputChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const saveForm = (event) => {\r\n        event.preventDefault();\r\n        patients.saveInfo(formState);\r\n    }\r\n\r\n    const cleanPatient = () => {\r\n        patients.cleanInfo(formState);\r\n        setFormState({\r\n            ...formState,\r\n            name: '',\r\n            age: '',\r\n            diagnosis: '',\r\n            comments: '',\r\n            tasks: ''\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form className={styled.form} onSubmit={saveForm}>\r\n            {props.patient.name === null ?\r\n                <>\r\n                    <input className={`${styled.mainHeader} ${styled.buttons} ${styled.submit}`} type=\"submit\" value=\"ZAPISZ\" />\r\n                    <div className={styled.headerBed}>Dodaj pacjenta</div>\r\n                </> :\r\n                <> <div className={styled.mainHeader}>\r\n                    <input className={`${styled.buttons} ${styled.submit}`} type=\"submit\" value=\"ZAPISZ\" />\r\n                    <button onClick={cleanPatient} className={`${styled.buttons} ${styled.remove}`}>USU≈É</button>\r\n                </div>\r\n                    <div className={styled.headerBed}>Edytuj</div>\r\n                </>}\r\n            <label>\r\n                Imiƒô i nazwisko:\r\n        <input className={styled.inputs} required name=\"name\" type=\"text\" value={formState.name} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n                Wiek:\r\n         <input className={styled.inputs} name=\"age\" type=\"number\" min=\"0\" value={formState.age} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n                Diagnoza lekarska:\r\n        <textarea name=\"diagnosis\" cols=\"75\" rows=\"4\" wrap=\"hard\" value={formState.diagnosis} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n                Uwagi:\r\n             <textarea name=\"comments\" cols=\"75\" rows=\"3\" value={formState.comments} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n                Zlecenia:\r\n             <textarea name=\"tasks\" cols=\"75\" rows=\"10\" value={formState.tasks} onChange={handleInputChange} />\r\n            </label>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Patient;\r\n","import { useContext } from 'react';\r\nimport PatientsContext from '../Contexts/PatientsContext';\r\nimport styled from './PatientInRoom.module.scss';\r\n\r\nconst PatientInRoom = (props) => {\r\n    const patients = useContext(PatientsContext);\r\n    return (\r\n        <div \r\n        className={`${styled.patientBed} ${props.name !== null ? styled.fillBed : styled.emptyBed} ${patients.active === props.id ? styled.active : null}`} \r\n        onClick={() => patients.showPatientInfo(props.id)}>\r\n            <p>≈Å√ì≈ªKO {props.id}</p>\r\n                {\r\n                    props.name !== null ? \r\n                <> <p className={styled.activeBed}>Pacjent: {props.name}</p>\r\n                <p className={styled.activeBed}>Wiek: {props.age}</p> </> :\r\n                 <p className={styled.emptyBed}>Puste ≈Ç√≥≈ºko</p>\r\n                }\r\n        </div>\r\n    )\r\n    }\r\nexport default PatientInRoom;","import Patient from '../AboutPatient/Patient';\r\nimport PatientInRoom from './PatientInRoom';\r\nimport React from 'react';\r\n\r\nconst Room = (props) => {\r\n\r\n  const personsHTML = props.persons.map(person =>\r\n    <>\r\n      <PatientInRoom \r\n        name={person.name}\r\n        age={person.age}\r\n        id={person.id}\r\n   />\r\n      {\r\n        props.showPersons !== null &&\r\n          props.showPersons.id === person.id ?\r\n          <Patient patient={person} /> : null\r\n      }\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {personsHTML}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Room;","import RoomInWard from \"./RoomInWard\";\r\nimport Room from \"../InsideRoom/Room\";\r\nimport PatientsContext from \"../Contexts/PatientsContext\"\r\nimport { useState } from \"react\";\r\n\r\nconst RoomEntrance = (props) => {\r\n\r\n  const setPersons = () => {\r\n    const patients = [];\r\n    for (let a=1; a<=props.room.amount; a++){\r\n      patients.push({ name: null, age: null, diagnosis: null, comments: null, tasks: null, id: a });\r\n    }\r\n    return patients;\r\n  }\r\n\r\n  const [personsState, setPersonsState] = useState({\r\n    persons: setPersons(),\r\n    showPersons: null,\r\n    activePerson: null\r\n  });\r\n\r\n  const showPatientInfo = (id) => {\r\n    const selectedPerson = personsState.persons.find(element => element.id === id);\r\n    if (personsState.showPersons !== selectedPerson) {\r\n      setPersonsState({\r\n        showPersons: selectedPerson,\r\n        persons: personsState.persons,\r\n        activePerson: id\r\n      });\r\n    } else {\r\n      setPersonsState({\r\n        showPersons: null,\r\n        persons: personsState.persons,\r\n        activePerson: null\r\n      });\r\n    }\r\n  }\r\n\r\n  const saveInfo = (info) => {\r\n    const persons = personsState.persons.map(person => {\r\n      if (person.id === info.id) {\r\n        return info;\r\n      }\r\n      return person;\r\n    });\r\n\r\n    setPersonsState({\r\n      ...personsState,\r\n      persons: persons\r\n    });\r\n  }\r\n\r\nconst cleanInfo = (info) => {\r\n  const persons = personsState.persons.map(person => {\r\n    if (person.id === info.id) {\r\n      Object.entries(info).forEach(([key, value]) => {\r\n        info[key] = key !== 'id' ? null : value;\r\n      });\r\n   return info;\r\n  } \r\n  return person;\r\n});\r\n\r\n  setPersonsState({\r\n    ...personsState,\r\n    persons: persons\r\n});\r\n}\r\n\r\n  const checkAmountOfPatients = () => personsState.persons.filter(person => person.name !== null).length;\r\n\r\n\r\n    return (\r\n        <PatientsContext.Provider value={{\r\n          showPatientInfo: showPatientInfo,\r\n          saveInfo: saveInfo,\r\n          cleanInfo: cleanInfo,\r\n          active: personsState.activePerson\r\n        }}>\r\n            {\r\n                props.openedRoom === null ?\r\n                    <div onClick={props.showRoom}>\r\n                        <RoomInWard roomNumber={props.room.id}\r\n                        roomType={props.room.type}\r\n                        checkAmountOfPatients={checkAmountOfPatients()} />\r\n                    </div> :\r\n                    props.openedRoom === props.room ?\r\n                        <Room \r\n                        persons={personsState.persons}\r\n                        showPersons={personsState.showPersons}\r\n                        /> : null\r\n            }\r\n        </PatientsContext.Provider>\r\n    );\r\n}\r\n\r\n\r\nexport default RoomEntrance;","import styled from './Title.module.scss';\r\n\r\n\r\nconst Title = () => {\r\n\r\n    function refresh() {\r\n          return window.location.reload(true);\r\n    }\r\n\r\n    return (\r\n        <h1 onClick={refresh} className={styled.h1}>CHIRURGIA OG√ìLNA</h1>\r\n    )\r\n}\r\n\r\nexport default Title;","import React, { useState } from 'react';\r\nimport styled from './App.module.scss';\r\nimport RoomEntrance from './RoomInWard/RoomEntrance';\r\nimport Title from './Header/Title';\r\n\r\nconst App = () => {\r\n\r\n  const [roomsState, setRoomsState] = useState({\r\n    rooms: [\r\n      {\r\n        id: 1,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 2,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 3,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 4,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 5,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 6,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 7,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 'IZOLATKA',\r\n        type: 'isolation',\r\n        amount: 1\r\n      }, {\r\n        id: 'SIOM',\r\n        type: 'intensive',\r\n        amount: 2\r\n      }],\r\n    openedRoom: null\r\n  });\r\n\r\n  const showRoom = (id) => {\r\n    setRoomsState({\r\n      openedRoom: roomsState.rooms.find(element => element.id === id),\r\n      rooms: roomsState.rooms\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <Title />\r\n      <div className={styled.container}>\r\n        {roomsState.rooms.map(element => {\r\n         return <RoomEntrance key={element.id} showRoom={() => showRoom(element.id)}\r\n         openedRoom={roomsState.openedRoom}\r\n         room={element} />\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}