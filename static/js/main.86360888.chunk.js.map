{"version":3,"sources":["AboutPatient/Patient.module.scss","RoomInWard/RoomInWard.module.scss","InsideRoom/PatientInRoom.module.scss","App.module.scss","RoomInWard/RoomInWard.jsx","Contexts/PatientsContext.jsx","AboutPatient/Patient.jsx","InsideRoom/PatientInRoom.jsx","InsideRoom/Room.jsx","RoomInWard/RoomEntrance.jsx","Header/Title.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["module","exports","RoomInWard","props","className","style","room","roomType","roomIsolation","roomIntensive","roomPrimary","getStyle","join","roomNumber","amountPatient","checkAmountOfPatients","PatientsContext","React","createContext","showPatientInfo","id","saveInfo","info","cleanInfo","cleaner","Patient","patients","useContext","useState","patient","formState","setFormState","handleInputChange","event","name","target","value","styled","form","onSubmit","preventDefault","headerBed","onClick","age","diagnosis","comments","tasks","headerClean","inputs","required","type","onChange","min","cols","rows","wrap","submit","PatientInRoom","patientBed","bedWords","Room","personsHTML","persons","map","person","showPersons","RoomEntrance","a","amount","push","setPersons","personsState","setPersonsState","Provider","selectedPerson","find","element","Object","entries","forEach","key","openedRoom","showRoom","filter","length","Title","window","location","reload","h1","App","rooms","roomsState","setRoomsState","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86360888.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Patient_form__2jBF1\",\"inputs\":\"Patient_inputs__2J-Ov\",\"headerBed\":\"Patient_headerBed__2EWWD\",\"headerClean\":\"Patient_headerClean__IAttb\",\"submit\":\"Patient_submit__1VtbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"room\":\"RoomInWard_room__3BRqr\",\"roomPrimary\":\"RoomInWard_roomPrimary__1l-5g\",\"roomIntensive\":\"RoomInWard_roomIntensive__1cCxK\",\"roomIsolation\":\"RoomInWard_roomIsolation__37Wu4\",\"amountPatient\":\"RoomInWard_amountPatient__2cxbP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"patientBed\":\"PatientInRoom_patientBed__3PfS7\",\"bedWords\":\"PatientInRoom_bedWords__3CGlj\",\"inputAge\":\"PatientInRoom_inputAge__dbzij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__kjRhy\"};","import React from 'react';\r\nimport style from './RoomInWard.module.scss';\r\n\r\n\r\nconst RoomInWard = props => {\r\n\r\nconst getStyle = () => {\r\n    switch (props.roomType) {\r\n        case 'isolation':\r\n            return style.roomIsolation;\r\n        case 'intensive':\r\n            return style.roomIntensive;\r\n        default:\r\n            return style.roomPrimary;\r\n    }\r\n}\r\n\r\n        return (\r\n        <div className={[style.room, getStyle()].join(' ')}>\r\n            {\r\n                props.roomType === 'normal' ? \r\n                <p>SALA </p>: null\r\n            }\r\n            <p>{props.roomNumber}</p>\r\n            <p className={style.amountPatient}>Stan pacjentów: {props.checkAmountOfPatients}</p>\r\n            </div>\r\n        )}\r\n\r\n\r\nexport default RoomInWard;","import React from 'react';\r\n\r\nconst PatientsContext = React.createContext({\r\n    showPatientInfo: (id) => { },\r\n    saveInfo: (info) => { },\r\n    cleanInfo: (cleaner) => { },\r\n});\r\n\r\nexport default PatientsContext;\r\n","import React, { useState, useContext } from 'react';\r\nimport PatientsContext from '../Contexts/PatientsContext';\r\nimport styled from './Patient.module.scss';\r\n\r\nconst Patient = (props) => {\r\n    const patients = useContext(PatientsContext);\r\n\r\n    const [formState, setFormState] = useState({\r\n        ...props.patient\r\n    });\r\n\r\n    const handleInputChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const saveForm = (event) => {\r\n        event.preventDefault();\r\n        patients.saveInfo(formState);\r\n    }\r\n\r\n    const cleanPatient = () => {\r\n        patients.cleanInfo(formState);\r\n        setFormState({\r\n            ...formState,\r\n            name: '',\r\n            age: '',\r\n            diagnosis: '',\r\n            comments: '',\r\n            tasks: ''\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form className={styled.form} onSubmit={saveForm}>\r\n            {props.patient.name === null ? <div className={styled.headerBed}>Stwórz pacjenta</div> : \r\n            <><button onClick={cleanPatient} className={styled.headerClean}>Wyczyść</button>\r\n            <div className={styled.headerBed}>Edytuj pacjenta</div></>}\r\n            <label>\r\n                Imię i nazwisko:\r\n        <input className={styled.inputs} required name=\"name\" type=\"text\" value={formState.name} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n                Wiek:\r\n         <input className={styled.inputs} name=\"age\" type=\"number\" min=\"0\" value={formState.age} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n                Diagnoza lekarska:\r\n        <textarea name=\"diagnosis\" cols=\"75\" rows=\"4\" wrap=\"hard\" value={formState.diagnosis} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n                Uwagi:\r\n             <textarea name=\"comments\" cols=\"75\" rows=\"3\" value={formState.comments} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n                Zlecenia:\r\n             <textarea name=\"tasks\" cols=\"75\" rows=\"10\" value={formState.tasks} onChange={handleInputChange} />\r\n            </label>\r\n            <input className={styled.submit} type=\"submit\" value=\"ZAPISZ\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Patient;\r\n","import { useContext } from 'react';\r\nimport PatientsContext from '../Contexts/PatientsContext';\r\nimport styled from './PatientInRoom.module.scss';\r\n\r\nconst PatientInRoom = (props) => {\r\n    const patients = useContext(PatientsContext);\r\n    return (\r\n        <div className={styled.patientBed} onClick={() => patients.showPatientInfo(props.id)}>\r\n                {\r\n                    props.name !== null ? \r\n                <> <p className={styled.bedWords}>Pacjent: {props.name}</p>\r\n                <p className={styled.bedWords}>Wiek: {props.age}</p> </> :\r\n                 <p className={styled.bedWords}>Puste łóżko</p>\r\n                }\r\n        </div>\r\n    )\r\n    }\r\nexport default PatientInRoom;","import Patient from '../AboutPatient/Patient';\r\nimport PatientInRoom from './PatientInRoom';\r\nimport React from 'react';\r\n\r\nconst Room = (props) => {\r\n\r\n  const personsHTML = props.persons.map(person =>\r\n    <>\r\n      <PatientInRoom \r\n        name={person.name}\r\n        age={person.age}\r\n        id={person.id} />\r\n\r\n      {\r\n        props.showPersons !== null &&\r\n          props.showPersons.id === person.id ?\r\n          <Patient patient={person} /> : null\r\n      }\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {personsHTML}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Room;","import RoomInWard from \"./RoomInWard\";\r\nimport Room from \"../InsideRoom/Room\";\r\nimport PatientsContext from \"../Contexts/PatientsContext\"\r\nimport { useState } from \"react\";\r\n\r\nconst RoomEntrance = (props) => {\r\n\r\n  const setPersons = () => {\r\n    const patients = [];\r\n    for (let a=1; a<=props.room.amount; a++){\r\n      patients.push({ name: null, age: null, diagnosis: null, comments: null, tasks: null, id: a });\r\n    }\r\n    return patients;\r\n  }\r\n\r\n  const [personsState, setPersonsState] = useState({\r\n    persons: setPersons(),\r\n    showPersons: null,\r\n  });\r\n\r\n  const showPatientInfo = (id) => {\r\n    const selectedPerson = personsState.persons.find(element => element.id === id);\r\n    if (personsState.showPersons !== selectedPerson) {\r\n      setPersonsState({\r\n        showPersons: selectedPerson,\r\n        persons: personsState.persons,\r\n      });\r\n    } else {\r\n      setPersonsState({\r\n        showPersons: null,\r\n        persons: personsState.persons,\r\n      });\r\n    }\r\n  }\r\n\r\n  const saveInfo = (info) => {\r\n    const persons = personsState.persons.map(person => {\r\n      if (person.id === info.id) {\r\n        return info;\r\n      }\r\n      return person;\r\n    });\r\n\r\n    setPersonsState({\r\n      ...personsState,\r\n      persons: persons\r\n    });\r\n  }\r\n\r\nconst cleanInfo = (info) => {\r\n  const persons = personsState.persons.map(person => {\r\n    if (person.id === info.id) {\r\n      Object.entries(info).forEach(([key, value]) => {\r\n        info[key] = key !== 'id' ? null : value;\r\n      });\r\n   return info;\r\n  } \r\n  return person;\r\n});\r\n\r\n  setPersonsState({\r\n    ...personsState,\r\n    persons: persons\r\n});\r\n}\r\n\r\n  const checkAmountOfPatients = () => personsState.persons.filter(person => person.name !== null).length;\r\n\r\n\r\n    return (\r\n        <PatientsContext.Provider value={{\r\n          showPatientInfo: showPatientInfo,\r\n          saveInfo: saveInfo,\r\n          cleanInfo: cleanInfo\r\n        }}>\r\n            {\r\n                props.openedRoom === null ?\r\n                    <div onClick={props.showRoom}>\r\n                        <RoomInWard roomNumber={props.room.id}\r\n                        roomType={props.room.type}\r\n                        checkAmountOfPatients={checkAmountOfPatients()} />\r\n                    </div> :\r\n                    props.openedRoom === props.room ?\r\n                        <Room \r\n                        persons={personsState.persons}\r\n                        showPersons={personsState.showPersons}\r\n                        /> : null\r\n            }\r\n        </PatientsContext.Provider>\r\n    );\r\n}\r\n\r\n\r\nexport default RoomEntrance;","import styled from './Title.module.scss';\r\n\r\n\r\nconst Title = () => {\r\n\r\n    function refresh() {\r\n          return window.location.reload(true);\r\n    }\r\n\r\n    return (\r\n        <h1 onClick={refresh} className={styled.h1}>CHIRURGIA OGÓLNA</h1>\r\n    )\r\n}\r\n\r\nexport default Title;","import React, { useState } from 'react';\r\nimport styled from './App.module.scss';\r\nimport RoomEntrance from './RoomInWard/RoomEntrance';\r\nimport Title from './Header/Title';\r\n\r\nconst App = () => {\r\n\r\n  const [roomsState, setRoomsState] = useState({\r\n    rooms: [\r\n      {\r\n        id: 1,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 2,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 3,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 4,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 5,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 6,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 7,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 'IZOLATKA',\r\n        type: 'isolation',\r\n        amount: 1\r\n      }, {\r\n        id: 'SIOM',\r\n        type: 'intensive',\r\n        amount: 2\r\n      }],\r\n    openedRoom: null\r\n  });\r\n\r\n  const showRoom = (id) => {\r\n    setRoomsState({\r\n      openedRoom: roomsState.rooms.find(element => element.id === id),\r\n      rooms: roomsState.rooms\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <Title />\r\n      <div className={styled.container}>\r\n        {roomsState.rooms.map(element => {\r\n         return <RoomEntrance key={element.id} showRoom={() => showRoom(element.id)}\r\n         openedRoom={roomsState.openedRoom}\r\n         room={element} />\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}