{"version":3,"sources":["InsideRoom/Room.module.scss","App.module.scss","InsideRoom/PatientInRoom.module.scss","RoomInWard/RoomInWard.jsx","Contexts/PatientsContext.jsx","AboutPatient/Patient.jsx","InsideRoom/PatientInRoom.jsx","InsideRoom/Room.jsx","RoomInWard/RoomEntrance.jsx","Header/Title.jsx","App.jsx","reportWebVitals.js","index.jsx","AboutPatient/Patient.module.scss","RoomInWard/RoomInWard.module.scss"],"names":["module","exports","RoomInWard","props","className","style","room","roomType","roomIsolation","roomIntensive","roomPrimary","getStyle","join","roomNumber","amountPatient","checkAmountOfPatients","PatientsContext","React","createContext","showPatientInfo","id","saveInfo","info","cleanInfo","cleaner","deleteBed","addBed","active","Patient","patients","useContext","useState","patient","formState","setFormState","handleInputChange","event","name","target","value","styled","form","onSubmit","preventDefault","mainHeader","buttons","submit","type","headerBed","onClick","age","diagnosis","comments","tasks","remove","inputs","required","onChange","min","cols","rows","wrap","PatientInRoom","beds","patientBed","fillBed","emptyBed","empty","e","stopPropagation","createPatientIcon","fontSize","Room","bed","personsHTML","persons","map","person","styles","containerItem","showPersons","container","size","RoomEntrance","a","amount","push","setPersons","activePerson","personsState","setPersonsState","Provider","selectedPerson","find","element","Object","entries","forEach","key","filter","length","openedRoom","showRoom","Title","window","location","reload","h1","App","rooms","roomsState","setRoomsState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,cAAgB,8B,mBCAtED,EAAOC,QAAU,CAAC,UAAY,yB,uCCA9BD,EAAOC,QAAU,CAAC,WAAa,kCAAkC,SAAW,gCAAgC,QAAU,+BAA+B,OAAS,8BAA8B,OAAS,8BAA8B,UAAY,iCAAiC,MAAQ,6BAA6B,kBAAoB,yCAAyC,SAAW,kC,uKC4B9WC,EAzBI,SAAAC,GAaX,OACA,sBAAKC,UAAW,CAACC,IAAMC,KAZd,WACb,OAAQH,EAAMI,UACV,IAAK,YACD,OAAOF,IAAMG,cACjB,IAAK,YACD,OAAOH,IAAMI,cACjB,QACI,OAAOJ,IAAMK,aAKYC,IAAYC,KAAK,KAA9C,UAE2B,WAAnBT,EAAMI,SACN,sCAAc,KAElB,4BAAIJ,EAAMU,aACV,oBAAGT,UAAWC,IAAMS,cAApB,gCAAoDX,EAAMY,6B,QCbvDC,EATSC,IAAMC,cAAc,CACxCC,gBAAiB,SAACC,KAClBC,SAAU,SAACC,KACXC,UAAW,SAACC,KACZC,UAAW,SAACL,KACZM,OAAQ,aACRC,OAAQ,O,gBCoEGC,EAxEC,SAACzB,GACb,IAAM0B,EAAWC,qBAAWd,GADL,EAGWe,mBAAS,eACpC5B,EAAM6B,UAJU,mBAGhBC,EAHgB,KAGLC,EAHK,KAOjBC,EAAoB,SAACC,GACvB,IAAMC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MAE3BL,EAAa,2BACND,GADK,kBAEPI,EAAOE,MAqBhB,OACI,uBAAMnC,UAAWoC,IAAOC,KAAMC,SAlBjB,SAACN,GACdA,EAAMO,iBACNd,EAASR,SAASY,IAgBlB,UAC4B,KAAvB9B,EAAM6B,QAAQK,KACX,qCACI,uBAAOjC,UAAS,UAAKoC,IAAOI,WAAZ,YAA0BJ,IAAOK,QAAjC,YAA4CL,IAAOM,QAAUC,KAAK,SAASR,MAAM,WACjG,qBAAKnC,UAAWoC,IAAOQ,UAAvB,+BAEJ,yCAAG,sBAAK5C,UAAWoC,IAAOI,WAAvB,UACC,uBAAOxC,UAAS,UAAKoC,IAAOK,QAAZ,YAAuBL,IAAOM,QAAUC,KAAK,SAASR,MAAM,WAC5E,wBAAQU,QArBH,WACjBpB,EAASN,UAAUU,GACnBC,EAAa,2BACND,GADK,IAERI,KAAM,GACNa,IAAK,GACLC,UAAW,GACXC,SAAU,GACVC,MAAO,OAagCjD,UAAS,UAAKoC,IAAOK,QAAZ,YAAuBL,IAAOc,QAAtE,0BAEA,qBAAKlD,UAAWoC,IAAOQ,UAAvB,uBAER,0DAEJ,uBAAO5C,UAAWoC,IAAOe,OAAQC,UAAQ,EAACnB,KAAK,OAAOU,KAAK,OAAOR,MAAON,EAAUI,KAAMoB,SAAUtB,OAE/F,0CAEH,uBAAO/B,UAAWoC,IAAOe,OAAQlB,KAAK,MAAMU,KAAK,SAASW,IAAI,IAAInB,MAAON,EAAUiB,IAAKO,SAAUtB,OAE/F,uDAEJ,0BAAUE,KAAK,YAAYsB,KAAK,KAAKC,KAAK,IAAIC,KAAK,OAAOtB,MAAON,EAAUkB,UAAWM,SAAUtB,OAE5F,2CAEC,0BAAUE,KAAK,WAAWsB,KAAK,KAAKC,KAAK,IAAIrB,MAAON,EAAUmB,SAAUK,SAAUtB,OAEnF,8CAEC,0BAAUE,KAAK,QAAQsB,KAAK,KAAKC,KAAK,KAAKrB,MAAON,EAAUoB,MAAOI,SAAUtB,W,kDCtC3E2B,EAxBO,SAAC3D,GACnB,IAAM4D,EAAOjC,qBAAWd,GAExB,OACI,sBACIZ,UAAS,UAAKoC,IAAOwB,WAAZ,YAAyC,KAAf7D,EAAMkC,KAAcG,IAAOyB,QAAUzB,IAAO0B,SAAtE,YAAkFH,EAAKpC,SAAWxB,EAAMiB,GAAKoB,IAAOb,OAAS,MACtIsB,QAAS,kBAAMc,EAAK5C,gBAAgBhB,EAAMiB,KAF9C,UAGI,sBAAKhB,UAAS,UAAKoC,IAAOQ,UAAZ,YAAwC,KAAf7C,EAAMkC,KAAcG,IAAOb,OAASa,IAAO2B,OAAlF,UACI,oDAAUhE,EAAMiB,MAChB,cAAC,IAAD,CAAmB6B,QAAS,SAACmB,GAEzBA,EAAEC,kBACFN,EAAKtC,UAAUtB,EAAMiB,UAIV,KAAfjB,EAAMkC,KACF,yCAAG,oBAAGjC,UAAWoC,IAAOyB,QAArB,sBAAwC9D,EAAMkC,QAC7C,oBAAGjC,UAAWoC,IAAOyB,QAArB,mBAAqC9D,EAAM+C,OAD/C,OAEA,qBAAK9C,UAAWoC,IAAO8B,kBAAvB,SAA0C,cAAC,IAAD,CAAeC,SAAS,kB,kCCcvEC,EAhCF,SAACrE,GACd,IAAMsE,EAAM3C,qBAAWd,GAEf0D,EAAcvE,EAAMwE,QAAQC,KAAI,SAAAC,GAAM,OAC1C,sBAAKzE,UAAW0E,IAAOC,cAAvB,UACE,cAAC,EAAD,CACE1C,KAAMwC,EAAOxC,KACba,IAAK2B,EAAO3B,IACZ9B,GAAIyD,EAAOzD,KAGW,OAAtBjB,EAAM6E,aACJ7E,EAAM6E,YAAY5D,KAAOyD,EAAOzD,GAChC,cAAC,EAAD,CAASY,QAAS6C,IAAa,OATMA,EAAOzD,OAcpD,OACE,sBAAKhB,UAAW0E,IAAOG,UAAvB,UACGP,EAEuB,OAAtBvE,EAAM6E,YACN,sBAAK/B,QAAS,kBAAMwB,EAAI/C,UAAUtB,UAAS,UAAKoC,IAAOwB,WAAZ,YAA0BxB,IAAOd,OAAjC,YAA2CoD,IAAOC,eAA7F,UACA,4DACA,cAAC,IAAD,CAAmBG,KAAK,cACf,SCkFFC,EA/GM,SAAChF,GAEpB,IAF8B,EAUU4B,mBAAS,CAC/C4C,QATiB,WAEjB,IADA,IAAM9C,EAAW,GACRuD,EAAE,EAAGA,GAAGjF,EAAMG,KAAK+E,OAAQD,IAClCvD,EAASyD,KAAK,CAAEjD,KAAM,GAAIa,IAAK,GAAIC,UAAW,GAAIC,SAAU,GAAIC,MAAO,GAAIjC,GAAIgE,IAEjF,OAAOvD,EAIE0D,GACTP,YAAa,KACbQ,aAAc,OAbc,mBAUvBC,EAVuB,KAUTC,EAVS,KAoF5B,OACI,cAAC,EAAgBC,SAAjB,CAA0BpD,MAAO,CAC/BpB,gBArDgB,SAACC,GACvB,IAAMwE,EAAiBH,EAAad,QAAQkB,MAAK,SAAAC,GAAO,OAAIA,EAAQ1E,KAAOA,KACvEqE,EAAaT,cAAgBY,EAC/BF,EAAgB,CACdV,YAAaY,EACbjB,QAASc,EAAad,QACtBa,aAAcpE,IAGhBsE,EAAgB,CACdV,YAAa,KACbL,QAASc,EAAad,QACtBa,aAAc,QA0CZnE,SArCS,SAACC,GAChB,IAAMqD,EAAUc,EAAad,QAAQC,KAAI,SAAAC,GACvC,OAAIA,EAAOzD,KAAOE,EAAKF,GACdE,EAEFuD,KAGTa,EAAgB,2BACXD,GADU,IAEbd,QAASA,MA4BLpD,UAxBQ,SAACD,GACjB,IAAMqD,EAAUc,EAAad,QAAQC,KAAI,SAAAC,GACvC,OAAIA,EAAOzD,KAAOE,EAAKF,IACrB2E,OAAOC,QAAQ1E,GAAM2E,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAX3D,EAAW,KAC7CjB,EAAK4E,GAAe,OAARA,EAAe,GAAK3D,KAE9BjB,GAEDuD,KAGPa,EAAgB,2BACXD,GADU,IAEbd,QAASA,MAYHlD,UA/DU,SAACL,GACjBsE,EAAgB,2BACXD,GADU,IAEbd,QAASc,EAAad,QAAQwB,QAAO,SAAA1B,GAAG,OAAIA,EAAIrD,KAAOA,SA6DnDM,OA1EK,WACbgE,EAAgB,2BACXD,GADU,IAEbd,QAAQ,GAAD,mBACFc,EAAad,SADX,CAEL,CAAEtC,KAAM,GAAIa,IAAK,GAAIC,UAAW,GAAIC,SAAU,GAAIC,MAAO,GAAIjC,GAAKqE,EAAad,QAAQyB,OAAS,SAsE5FzE,OAAQ8D,EAAaD,cANvB,SAS6B,OAArBrF,EAAMkG,WACF,qBAAKpD,QAAS9C,EAAMmG,SAApB,SACI,cAAC,EAAD,CAAYzF,WAAYV,EAAMG,KAAKc,GACnCb,SAAUJ,EAAMG,KAAKyC,KACrBhC,sBAjBc0E,EAAad,QAAQwB,QAAO,SAAAtB,GAAM,MAAoB,KAAhBA,EAAOxC,QAAa+D,WAmB5EjG,EAAMkG,aAAelG,EAAMG,KACvB,cAAC,EAAD,CACAqE,QAASc,EAAad,QACtBK,YAAaS,EAAaT,cACrB,Q,iBC/FduB,EAXD,WAMV,OACI,oBAAItD,QALR,WACM,OAAOuD,OAAOC,SAASC,QAAO,IAIVtG,UAAWoC,IAAOmE,GAAxC,kCC4DOC,EAjEH,WAAO,IAAD,EAEoB7E,mBAAS,CAC3C8E,MAAO,CACL,CACEzF,GAAI,EACJ2B,KAAM,SACNsC,OAAQ,GACP,CACDjE,GAAI,EACJ2B,KAAM,SACNsC,OAAQ,GACP,CACDjE,GAAI,EACJ2B,KAAM,SACNsC,OAAQ,GACP,CACDjE,GAAI,EACJ2B,KAAM,SACNsC,OAAQ,GACP,CACDjE,GAAI,EACJ2B,KAAM,SACNsC,OAAQ,GACP,CACDjE,GAAI,EACJ2B,KAAM,SACNsC,OAAQ,GACP,CACDjE,GAAI,EACJ2B,KAAM,SACNsC,OAAQ,GACP,CACDjE,GAAI,WACJ2B,KAAM,YACNsC,OAAQ,GACP,CACDjE,GAAI,OACJ2B,KAAM,YACNsC,OAAQ,IAEZgB,WAAY,OAzCE,mBAETS,EAFS,KAEGC,EAFH,KAmDhB,OACE,qCACI,cAAC,EAAD,IACF,qBAAK3G,UAAWoC,IAAOyC,UAAvB,SACG6B,EAAWD,MAAMjC,KAAI,SAAAkB,GACrB,OAAO,cAAC,EAAD,CAA+BQ,SAAU,kBAZrClF,EAYoD0E,EAAQ1E,QAX5E2F,EAAc,CACZV,WAAYS,EAAWD,MAAMhB,MAAK,SAAAC,GAAO,OAAIA,EAAQ1E,KAAOA,KAC5DyF,MAAOC,EAAWD,QAHL,IAACzF,GAaXiF,WAAYS,EAAWT,WACvB/F,KAAMwF,GAFoBA,EAAQ1E,aCjD5B4F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAhH,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,wBAAwB,UAAY,2BAA2B,WAAa,4BAA4B,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,0B,kBCA7OD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,YAAc,gCAAgC,cAAgB,kCAAkC,cAAgB,kCAAkC,cAAgB,qC","file":"static/js/main.dc3a7a78.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Room_container__2SW40\",\"containerItem\":\"Room_containerItem__8rPUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__kjRhy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"patientBed\":\"PatientInRoom_patientBed__3PfS7\",\"emptyBed\":\"PatientInRoom_emptyBed__1T2YP\",\"fillBed\":\"PatientInRoom_fillBed__GAZXx\",\"active\":\"PatientInRoom_active__2Q-Yk\",\"addBed\":\"PatientInRoom_addBed__2_ioS\",\"headerBed\":\"PatientInRoom_headerBed__2VXV6\",\"empty\":\"PatientInRoom_empty__1omct\",\"createPatientIcon\":\"PatientInRoom_createPatientIcon__38Isd\",\"inputAge\":\"PatientInRoom_inputAge__dbzij\"};","import React from 'react';\r\nimport style from './RoomInWard.module.scss';\r\n\r\n\r\nconst RoomInWard = props => {\r\n\r\nconst getStyle = () => {\r\n    switch (props.roomType) {\r\n        case 'isolation':\r\n            return style.roomIsolation;\r\n        case 'intensive':\r\n            return style.roomIntensive;\r\n        default:\r\n            return style.roomPrimary;\r\n    }\r\n}\r\n\r\n        return (\r\n        <div className={[style.room, getStyle()].join(' ')}>\r\n            {\r\n                props.roomType === 'normal' ? \r\n                <p>SALA </p>: null\r\n            }\r\n            <p>{props.roomNumber}</p>\r\n            <p className={style.amountPatient}>Stan pacjent√≥w: {props.checkAmountOfPatients}</p>\r\n            </div>\r\n        )}\r\n\r\n\r\nexport default RoomInWard;","import React from 'react';\r\n\r\nconst PatientsContext = React.createContext({\r\n    showPatientInfo: (id) => { },\r\n    saveInfo: (info) => { },\r\n    cleanInfo: (cleaner) => { },\r\n    deleteBed: (id) => { },\r\n    addBed: () => { },\r\n    active: null\r\n});\r\n\r\nexport default PatientsContext;\r\n","import React, { useState, useContext } from 'react';\r\nimport PatientsContext from '../Contexts/PatientsContext';\r\nimport styled from './Patient.module.scss';\r\n\r\nconst Patient = (props) => {\r\n    const patients = useContext(PatientsContext);\r\n\r\n    const [formState, setFormState] = useState({\r\n        ...props.patient\r\n    });\r\n\r\n    const handleInputChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const saveForm = (event) => {\r\n        event.preventDefault();\r\n        patients.saveInfo(formState);\r\n    }\r\n\r\n    const cleanPatient = () => {\r\n        patients.cleanInfo(formState);\r\n        setFormState({\r\n            ...formState,\r\n            name: '',\r\n            age: '',\r\n            diagnosis: '',\r\n            comments: '',\r\n            tasks: ''\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form className={styled.form} onSubmit={saveForm}>\r\n            {props.patient.name === \"\" ?\r\n                <>\r\n                    <input className={`${styled.mainHeader} ${styled.buttons} ${styled.submit}`} type=\"submit\" value=\"ZAPISZ\" />\r\n                    <div className={styled.headerBed}>Dodaj pacjenta</div>\r\n                </> :\r\n                <> <div className={styled.mainHeader}>\r\n                    <input className={`${styled.buttons} ${styled.submit}`} type=\"submit\" value=\"ZAPISZ\" />\r\n                    <button onClick={cleanPatient} className={`${styled.buttons} ${styled.remove}`}>USU≈É</button>\r\n                </div>\r\n                    <div className={styled.headerBed}>Edytuj</div>\r\n                </>}\r\n            <label>\r\n                Imiƒô i nazwisko:\r\n        <input className={styled.inputs} required name=\"name\" type=\"text\" value={formState.name} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n                Wiek:\r\n         <input className={styled.inputs} name=\"age\" type=\"number\" min=\"0\" value={formState.age} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n                Diagnoza lekarska:\r\n        <textarea name=\"diagnosis\" cols=\"75\" rows=\"4\" wrap=\"hard\" value={formState.diagnosis} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n                Uwagi:\r\n             <textarea name=\"comments\" cols=\"75\" rows=\"3\" value={formState.comments} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n                Zlecenia:\r\n             <textarea name=\"tasks\" cols=\"75\" rows=\"10\" value={formState.tasks} onChange={handleInputChange} />\r\n            </label>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Patient;\r\n","import { useContext } from 'react';\r\nimport PatientsContext from '../Contexts/PatientsContext';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport styled from './PatientInRoom.module.scss';\r\nimport Popup from '../Popup/Popup';\r\n\r\nconst PatientInRoom = (props) => {\r\n    const beds = useContext(PatientsContext);\r\n\r\n    return (\r\n        <div\r\n            className={`${styled.patientBed} ${props.name !== \"\" ? styled.fillBed : styled.emptyBed} ${beds.active === props.id ? styled.active : null}`}\r\n            onClick={() => beds.showPatientInfo(props.id)}>\r\n            <div className={`${styled.headerBed} ${props.name !== \"\" ? styled.active : styled.empty}`}>\r\n                <p>≈Å√ì≈ªKO {props.id}</p>\r\n                <DeleteForeverIcon onClick={(e) => {\r\n                    <Popup />\r\n                    e.stopPropagation();\r\n                    beds.deleteBed(props.id);\r\n                }} />\r\n            </div>\r\n            {\r\n                props.name !== \"\" ?\r\n                    <> <p className={styled.fillBed}>Pacjent: {props.name}</p>\r\n                        <p className={styled.fillBed}>Wiek: {props.age}</p> </> :\r\n                    <div className={styled.createPatientIcon}><PersonAddIcon fontSize=\"inherit\"/></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default PatientInRoom;","import Patient from '../AboutPatient/Patient';\r\nimport PatientInRoom from './PatientInRoom';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport styled from './PatientInRoom.module.scss';\r\nimport React, { useContext } from 'react';\r\nimport PatientsContext from '../Contexts/PatientsContext';\r\nimport styles from './Room.module.scss'\r\n\r\nconst Room = (props) => {\r\nconst bed = useContext(PatientsContext);\r\n\r\n  const personsHTML = props.persons.map(person =>\r\n    <div className={styles.containerItem} key={person.id}>\r\n      <PatientInRoom \r\n        name={person.name}\r\n        age={person.age}\r\n        id={person.id}\r\n   />\r\n      {\r\n        props.showPersons !== null &&\r\n          props.showPersons.id === person.id ?\r\n          <Patient patient={person} /> : null\r\n      }\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className={styles.container} >\r\n      {personsHTML}\r\n      {\r\n        props.showPersons === null ? \r\n        <div onClick={() => bed.addBed()} className={`${styled.patientBed} ${styled.addBed} ${styles.containerItem}`}>\r\n        <span>DODAJ ≈Å√ì≈ªKO</span>\r\n        <LocalHospitalIcon size=\"medium\"/>\r\n        </div> : null\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Room;","import RoomInWard from \"./RoomInWard\";\r\nimport Room from \"../InsideRoom/Room\";\r\nimport PatientsContext from \"../Contexts/PatientsContext\"\r\nimport { useState } from \"react\";\r\n\r\nconst RoomEntrance = (props) => {\r\n\r\n  const setPersons = () => {\r\n    const patients = [];\r\n    for (let a=1; a<=props.room.amount; a++){\r\n      patients.push({ name: \"\", age: \"\", diagnosis: \"\", comments: \"\", tasks: \"\", id: a });\r\n    }\r\n    return patients;\r\n  }\r\n\r\n  const [personsState, setPersonsState] = useState({\r\n    persons: setPersons(),\r\n    showPersons: null,\r\n    activePerson: null\r\n  });\r\n\r\nconst addBed = () => {\r\n  setPersonsState({\r\n    ...personsState,\r\n    persons: [\r\n      ...personsState.persons,\r\n      { name: \"\", age: \"\", diagnosis: \"\", comments: \"\", tasks: \"\", id: (personsState.persons.length + 1)}\r\n    ]\r\n  });\r\n}\r\n\r\n  const deleteBed = (id) => {\r\n    setPersonsState({\r\n      ...personsState,\r\n      persons: personsState.persons.filter(bed => bed.id !== id)\r\n    });\r\n  }\r\n\r\n  const showPatientInfo = (id) => {\r\n    const selectedPerson = personsState.persons.find(element => element.id === id);\r\n    if (personsState.showPersons !== selectedPerson) {\r\n      setPersonsState({\r\n        showPersons: selectedPerson,\r\n        persons: personsState.persons,\r\n        activePerson: id\r\n      });\r\n    } else {\r\n      setPersonsState({\r\n        showPersons: null,\r\n        persons: personsState.persons,\r\n        activePerson: null\r\n      });\r\n    }\r\n  }\r\n\r\n  const saveInfo = (info) => {\r\n    const persons = personsState.persons.map(person => {\r\n      if (person.id === info.id) {\r\n        return info;\r\n      }\r\n      return person;\r\n    });\r\n\r\n    setPersonsState({\r\n      ...personsState,\r\n      persons: persons\r\n    });\r\n  }\r\n\r\nconst cleanInfo = (info) => {\r\n  const persons = personsState.persons.map(person => {\r\n    if (person.id === info.id) {\r\n      Object.entries(info).forEach(([key, value]) => {\r\n        info[key] = key !== 'id' ? \"\" : value;\r\n      });\r\n   return info;\r\n  } \r\n  return person;\r\n});\r\n\r\n  setPersonsState({\r\n    ...personsState,\r\n    persons: persons\r\n});\r\n}\r\n\r\n  const checkAmountOfPatients = () => personsState.persons.filter(person => person.name !== \"\").length;\r\n\r\n\r\n    return (\r\n        <PatientsContext.Provider value={{\r\n          showPatientInfo: showPatientInfo,\r\n          saveInfo: saveInfo,\r\n          cleanInfo: cleanInfo,\r\n          deleteBed: deleteBed,\r\n          addBed: addBed,\r\n          active: personsState.activePerson\r\n        }}>\r\n            {\r\n                props.openedRoom === null ?\r\n                    <div onClick={props.showRoom}>\r\n                        <RoomInWard roomNumber={props.room.id}\r\n                        roomType={props.room.type}\r\n                        checkAmountOfPatients={checkAmountOfPatients()} />\r\n                    </div> :\r\n                    props.openedRoom === props.room ?\r\n                        <Room \r\n                        persons={personsState.persons}\r\n                        showPersons={personsState.showPersons}\r\n                        /> : null\r\n            }\r\n        </PatientsContext.Provider>\r\n    );\r\n}\r\n\r\n\r\nexport default RoomEntrance;","import styled from './Title.module.scss';\r\n\r\n\r\nconst Title = () => {\r\n\r\n    function refresh() {\r\n          return window.location.reload(true);\r\n    }\r\n\r\n    return (\r\n        <h1 onClick={refresh} className={styled.h1}>CHIRURGIA OG√ìLNA</h1>\r\n    )\r\n}\r\n\r\nexport default Title;","import React, { useState } from 'react';\r\nimport styled from './App.module.scss';\r\nimport RoomEntrance from './RoomInWard/RoomEntrance';\r\nimport Title from './Header/Title';\r\n\r\nconst App = () => {\r\n\r\n  const [roomsState, setRoomsState] = useState({\r\n    rooms: [\r\n      {\r\n        id: 1,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 2,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 3,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 4,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 5,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 6,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 7,\r\n        type: 'normal',\r\n        amount: 3\r\n      }, {\r\n        id: 'IZOLATKA',\r\n        type: 'isolation',\r\n        amount: 1\r\n      }, {\r\n        id: 'SIOM',\r\n        type: 'intensive',\r\n        amount: 2\r\n      }],\r\n    openedRoom: null\r\n  });\r\n\r\n  const showRoom = (id) => {\r\n    setRoomsState({\r\n      openedRoom: roomsState.rooms.find(element => element.id === id),\r\n      rooms: roomsState.rooms\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <Title />\r\n      <div className={styled.container}>\r\n        {roomsState.rooms.map(element => {\r\n         return <RoomEntrance key={element.id} showRoom={() => showRoom(element.id)}\r\n         openedRoom={roomsState.openedRoom}\r\n         room={element} />\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Patient_form__2jBF1\",\"inputs\":\"Patient_inputs__2J-Ov\",\"headerBed\":\"Patient_headerBed__2EWWD\",\"mainHeader\":\"Patient_mainHeader__m5UAR\",\"buttons\":\"Patient_buttons__22w_h\",\"remove\":\"Patient_remove__Ro1Wh\",\"submit\":\"Patient_submit__1VtbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"room\":\"RoomInWard_room__3BRqr\",\"roomPrimary\":\"RoomInWard_roomPrimary__1l-5g\",\"roomIntensive\":\"RoomInWard_roomIntensive__1cCxK\",\"roomIsolation\":\"RoomInWard_roomIsolation__37Wu4\",\"amountPatient\":\"RoomInWard_amountPatient__2cxbP\"};"],"sourceRoot":""}